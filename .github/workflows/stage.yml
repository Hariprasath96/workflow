name: Stage PR workflow

on:
  pull_request:
    branches:
      - main

jobs:
  list-products:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(ls products/*.json | jq -R -s -c 'split("\n")[:-1]')"

  read-file:
    needs: list-products
    runs-on: ubuntu-latest
    strategy:
        matrix:
            manifest: ${{ fromJson(needs.list-products.outputs.matrix) }}
    outputs:
      matrix-json: ${{ steps.saved_file.outputs.contents }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Read file contents
        id: read_file
        uses: andstor/file-reader-action@v1
        with:
          path: ${{ matrix.manifest }}
      
      - name: Save file contents
        run: echo "::set-output name=contents::${{steps.read_file.outputs.contents}}"

      # - name: Save state
      #   id: saved_file
      #   run: echo "::save-state name={contents}::${{steps.read_file.outputs.contents}}"

      - name: Save to artifacts
        run: |
          mkdir -p path/to/artifact
          echo hello > path/to/artifact/world.txt

      - name: File contents
        run: echo "${{ steps.saved_file }}"

  check:
    needs: [ read-file ]
    runs-on: ubuntu-latest
    strategy:
        matrix:
            include: ${{ fromJson(needs.read-file.outputs.matrix-json) }}
    steps:
      - uses: actions/checkout@v2 
      - run: |
          echo "${{ matrix.manifest }}"

      - name: Read artifacts
        uses: actions/upload-artifact@v2
        with: 
          name: my-artifact
          path: path/to/artifact

          
        # TODO: Trigger the workflow based on the variable repo

  # sample:
  #   needs: check
  #   runs-on: ubuntu-latest
  #   strategy:
  #       matrix:
  #           manifest: ${{ fromJson(needs.check.outputs.testop) }}
            
  #   steps:
  #     - uses: actions/checkout@v2   
  #     - run: |
  #         echo "${{ matrix.manifest }}"
          